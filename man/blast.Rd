% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BLAST.R
\name{blast}
\alias{blast}
\alias{BLAST}
\alias{blast_help}
\alias{print.BLAST}
\alias{predict.BLAST}
\alias{has_blast}
\title{Basic Local Alignment Search Tool (BLAST)}
\usage{
blast(db = NULL, remote = FALSE, type = "blastn")

blast_help(type = "blastn")

\method{print}{BLAST}(x, info = TRUE, ...)

\method{predict}{BLAST}(
  object,
  newdata,
  BLAST_args = "",
  custom_format = "",
  verbose = FALSE,
  keep_tmp = FALSE,
  ...
)

has_blast()
}
\arguments{
\item{db}{the database file to be searched (without file extension).}

\item{remote}{logical execute the query remotely on the NCBI server. \code{db}
needs to be the name of a database available in the server.}

\item{type}{BLAST program to use (e.g., \code{blastn}, \code{blastp}, \code{blastx}).}

\item{info}{show additional data base information.}

\item{...}{additional arguments are ignored.}

\item{object, x}{An open BLAST database as a BLAST object created
with \code{\link[=blast]{blast()}}.}

\item{newdata}{the query as an object of class \link{XStringSet}.}

\item{BLAST_args}{additional arguments in command-line style.}

\item{custom_format}{custom format specified by space delimited format
specifiers.}

\item{verbose}{logical; print progress and debugging information.}

\item{keep_tmp}{logical; keep temporary files for debugging.}
}
\value{
\itemize{
\item \code{blast()} returns a BLAST database object which can be used for
queries (via \code{predict}).
\item \code{predict} returns a data.frame containing
the BLAST results.
\item \code{has_blast()} returns \code{TRUE} if the blast software installation can be
found and \code{FALSE} otherwise.
}
}
\description{
Open a BLAST database and execute blastn from blast+ to find sequences
matches.
}
\details{
The BLAST+ software needs to be installed on your system. The software for
different operating systems is available at:
\url{https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/}

A precombiled software package is already available for many Linux distributions.
The package is typically called ‚Å†ncbi-blast+. For example, in Debian/Ubuntu, the
package can be installed using the APT package manager:

\if{html}{\out{<div class="sourceCode">}}\preformatted{apt-get install ncbi-blast+
}\if{html}{\out{</div>}}

R needs to be able to find the executable. This is mostly only an issue with
Windows. After installing the software, try in R

\if{html}{\out{<div class="sourceCode">}}\preformatted{Sys.which("blastn")
}\if{html}{\out{</div>}}

to see if
the program can be found. If the command returns \code{""} instead of the path to the
executable, then you need to set the environment variable called \code{PATH}. In R

\if{html}{\out{<div class="sourceCode">}}\preformatted{Sys.setenv(PATH = paste(Sys.getenv("PATH"), "path_to_BLAST",
                        sep = .Platform$path.sep
))
}\if{html}{\out{</div>}}

You will also need a database. NCBI BLAST databases are updated daily and
may be downloaded via FTP from https://ftp.ncbi.nlm.nih.gov/blast/db/. See
\code{\link[=blast_db_cache]{blast_db_cache()}} on how to manage a local cache of database files.
}
\examples{
## check if blastn is correctly installed
Sys.which("blastn")

## only run if blast is installed
if (has_blast()) {
    ## check version you should have version 1.8.1+
    system2("blastn", "-version")

    ## download and extract the 16S Microbial rRNA data base from NCBI
    tgz_file <- blast_db_get("16S_ribosomal_RNA.tar.gz")
    untar(tgz_file, exdir = "16S_rRNA_DB")

    ## Note the database file can also downloaded without using a
    ##    cache using download.file
    # download.file(paste("https://ftp.ncbi.nlm.nih.gov/blast/db",
    #    "16S_ribosomal_RNA.tar.gz", sep = "/"),
    #    "16S_ribosomal_RNA.tar.gz", mode = "wb")
    # untar("16S_ribosomal_RNA.tar.gz", exdir = "16S_rRNA_DB")

    ## A BLAST database is just a set of files. It is a good idea to
    ## organize the files in a directory.
    list.files("./16S_rRNA_DB")

    ## load a BLAST database (replace db with the location + name of
    ##   the BLAST DB without the extension)
    bl <- blast(db = "./16S_rRNA_DB/16S_ribosomal_RNA")
    bl

    ## read a single example sequence to BLAST
    seq <- readRNAStringSet(system.file("examples/RNA_example.fasta",
        package = "rBLAST"
    ))[1]
    seq

    ## query a sequence using BLAST
    cl <- predict(bl, seq)
    cl[1:5, ]

    ## Pass on BLAST arguments (99\% identity) and use a custom format
    ## (see BLAST documentation)
    fmt <- paste(
        "qaccver saccver pident length mismatch gapopen qstart qend",
        "sstart send evalue bitscore qseq sseq"
    )
    cl <- predict(bl, seq,
        BLAST_args = "-perc_identity 99",
        custom_format = fmt
    )
    cl

    ## cleanup: delete the database files
    unlink("./16S_rRNA_DB", recursive = TRUE)
}
}
\references{
BLAST Help - BLAST+ Executable:
https://blast.ncbi.nlm.nih.gov/doc/blast-help/downloadblastdata.html

BLAST Command Line Applications User Manual,
https://www.ncbi.nlm.nih.gov/books/NBK279690/
}
\seealso{
Other blast: 
\code{\link{blast_db_cache}()},
\code{\link{makeblastdb}()}
}
\author{
Michael Hahsler
}
\concept{blast}
\keyword{model}
