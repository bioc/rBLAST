% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BLAST.R
\name{blast}
\alias{blast}
\alias{BLAST}
\alias{blast_help}
\alias{print.BLAST}
\alias{predict.BLAST}
\title{Basic Local Alignment Search Tool (BLAST)}
\usage{
blast(db = NULL, type = "blastn")

blast_help(type = "blastn")

\method{print}{BLAST}(x, info = TRUE, ...)

\method{predict}{BLAST}(
  object,
  newdata,
  BLAST_args = "",
  custom_format = "",
  verbose = FALSE,
  keep_tmp = FALSE,
  ...
)
}
\arguments{
\item{db}{the database file to be searched (without file extension).}

\item{type}{BLAST program to use (e.g., \code{blastn}, \code{blastp}, \code{blastx}).}

\item{info}{show additional data base information.}

\item{...}{additional arguments are ignored.}

\item{object, x}{An open BLAST database as a BLAST object created
with \code{\link[=blast]{blast()}}.}

\item{newdata}{the query as an object of class \link{XStringSet}.}

\item{BLAST_args}{additional arguments in command-line style.}

\item{custom_format}{custom format specified by space delimited format
specifiers.}

\item{verbose}{logical; print progress and debugging information.}

\item{keep_tmp}{logical; keep temporary files for debugging.}
}
\value{
\code{blast()} returns a BLAST database object which can be used for
queries (via \code{predict}). \code{predict} returns a data.frame containing
the BLAST results.
}
\description{
Open a BLAST database and execute blastn from blast+ to find sequences
matches.
}
\details{
The BLAST+ software has to be installed:
\itemize{
\item Linux (e.g., Debian/Ubuntu) install package: \verb{ncbi-blast+}
\item Windows or OS X install the software from
\url{https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/}.
}

R needs to be able to find the executable (mostly an issue with Windows).
Try \code{Sys.which("blastn")} to see if the program is properly installed.
If not, then you probably need to set the environment variable called \code{PATH}
using something like \code{Sys.setenv(PATH = paste(Sys.getenv("PATH"), "path_to_BLAST", sep= .Platform$path.sep))}. You can use
\code{Sys.getenv("PATH")} first to see what is currently in the search path.

You will also need a database. NCBI BLAST databases are updated daily and
may be downloaded via FTP from \url{https://ftp.ncbi.nlm.nih.gov/blast/db/}.

Custom output format. If no custom format is specified, then
}
\examples{
## check if blastn is correctly installed
Sys.which("blastn")

## check version you should have version 1.8.1+
system2("blastn", "-version")

## download the 16S Microbial rRNA data base from NCBI
if (!file.exists("16S_rRNA_DB")) {
    download.file("https://ftp.ncbi.nlm.nih.gov/blast/db/16S_ribosomal_RNA.tar.gz",
        "16S_ribosomal_RNA.tar.gz",
        mode = "wb"
    )
    untar("16S_ribosomal_RNA.tar.gz", exdir = "16S_rRNA_DB")
}

## load a BLAST database (replace db with the location + name of
## the BLAST DB without the extension)
list.files("./16S_rRNA_DB/")
bl <- blast(db = "./16S_rRNA_DB/16S_ribosomal_RNA")
bl

print(bl, info = TRUE)

## read a single example sequence to BLAST
seq <- readRNAStringSet(system.file("examples/RNA_example.fasta",
    package = "rBLAST"
))[1]
seq

## query a sequence using BLAST
cl <- predict(bl, seq)
cl[1:5, ]

## Pass on BLAST arguments (99\% identity) and use a custom format
## (see BLAST documentation)
fmt <- paste(
    "qaccver saccver pident length mismatch gapopen qstart qend",
    "sstart send evalue bitscore qseq sseq"
)
cl <- predict(bl, seq,
    BLAST_args = "-perc_identity 99",
    custom_format = fmt
)
cl
}
\references{
BLAST Help - BLAST+ Executable:
\url{https://blast.ncbi.nlm.nih.gov/doc/blast-help/downloadblastdata.html}

BLAST Command Line Applications User Manual,
\url{https://www.ncbi.nlm.nih.gov/books/NBK279690/}
}
\seealso{
\link{makeblastdb} for creating custom BLAST databases from
FASTA files.
}
\author{
Michael Hahsler
}
\keyword{model}
